"""Updates profile names from TTM to be more readable"""

if __name__ == '__main__':
    profiles = ["VF-Flay.simc", "DA-Flay.simc", "VF-Spike.simc", "DA-Spike.simc",
                "VF-Flay_SC.simc", "DA-Flay_SC.simc", "VF-Spike_SC.simc", "DA-Spike_SC.simc"]
    for profile in profiles:
        OUTPUT_FILE = ""
        with open(profile, 'r', encoding="utf8") as file:
            data = file.readlines()
            file.close()

        SIGNATURE = "# Automatically generated by ttm.py\n"
        if data[0] != SIGNATURE:
            data = [SIGNATURE] + data
        else:
            print(f"{profile} has already been generated, skipping file.")
            continue

        for line in data:
            if 'Solved loadout ' not in line:
                OUTPUT_FILE = OUTPUT_FILE + line
                continue
            TALENT = profile[:2]
            line = line.replace('Solved loadout ', TALENT + "_")
            line = line.replace(
                ' 111', "_" + profile.split('-')[1].split('.simc')[0])

            # Don't add combos that waste points on TS without Yogg
            if "tormented_spirits" in line and "idol_of_yoggsaron" not in line:
                continue

            idols = ["yshaarj", "nzoth", "yogg", "cthun"]
            IDOLS_USED = ""
            IDOLS_COUNT = 0
            for idol in idols:
                if idol in line:
                    IDOLS_COUNT = IDOLS_COUNT + 1
                    if len(IDOLS_USED) > 1:
                        IDOLS_USED += "_"
                    IDOLS_USED += idol
            if len(IDOLS_USED) > 1:
                IDOLS_USED = "_" + IDOLS_USED
            line = line.replace(
                f'profileset."{TALENT}', f'profileset."{TALENT}{IDOLS_USED}')

            # ONLY ALLOW 2 IDOL BUILDS
            if IDOLS_COUNT > 1:
                OUTPUT_FILE = OUTPUT_FILE + line

        with open(profile, 'w', encoding="utf8") as file:
            file.writelines(OUTPUT_FILE)
            file.close()
